from pathlib import Path
import sys, warnings


assert len(sys.argv) == 2, 'Must pass imagename as argument.'
image_name = sys.argv[1]
GENERIC_MSG = "This Action assumes you are not explicitly using Binder to build your dependencies."

# Check for .binder directory and stop if exists
p = Path('./.binder')
if p.exists():
    raise Exception(f"Found directory .binder {GENERIC_MSG} The presence of a directory named .binder indicates otherwise.  Aborting this step.")

# Check for binder directory and attempt to validate user intent to use this to cache Binder builds
p = Path('./binder')
p.mkdir(exist_ok=True)

if [x for x in p.glob('*') if x.name != 'Dockerfile']:
    raise Exception(f"Files other than Dockerfile are present in your binder/ directory. {GENERIC_MSG} This directory is used by this Action to point to an existing Docker image that Binder can pull.")
else:
    FIRST_LINE =  '### DO NOT EDIT THIS FILE! This Is Automatically Generated And Will Be Overwritten ###'
    # Raise warning if file was edited
    dockerfile = p/'Dockerfile'
    if dockerfile.exists():
        contents = dockerfile.read_text().split('\n')
        if (len(contents) != 2) or (contents[0] != first_line):
            warnings.warn('You have manually edited binder/Dockerfile. This file will be overwritten.', UserWarning)
    
    dockerfile.write_text(f'{FIRST_LINE}\nFROM {image_name}')
